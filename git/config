[user]
	name = Jon Parise
	useConfigOnly = true

[core]
	pager = less -FRX
	precomposeunicode = true

[alias]
	amend = commit --amend
	base = !git merge-base HEAD $(git main)
	changes = !git diff --name-only $(git merge-base HEAD \"${DIFF_BASE:-$(git main)}\")
	co = checkout
	conflicts = diff --name-only --diff-filter=U
	deletes = log --diff-filter=D --summary
	diff-staged = diff --cached
	edit = "!$(git var GIT_EDITOR) $(git files $*)"
	files = "!f() { git ls-files --exclude-standard -m -- ${@/#/$GIT_PREFIX} | sort -u | tr '\n' ' '; }; f"
	head = log -1 --decorate --name-status HEAD
	main = !basename $(git symbolic-ref refs/remotes/origin/HEAD)
	mine = "!f() { git log --no-merges --author=$(git config user.email) -- ${@/#/$GIT_PREFIX}; }; f"
	outgoing = log --pretty=oneline --abbrev-commit @{u}..
	remotes = for-each-ref --sort=-committerdate --format='%(color:yellow)%(authordate:short)\t%(align:50)%(color:reset)%(refname:short)%(end)\t%(color:green)%(authorname)' refs/remotes
	root = rev-parse --show-toplevel
	slog = "!f() { git log --no-merges --pretty=format:'%C(yellow)%cs %C(cyan)%h %Creset%s %C(green)(%aN)%C(bold red)%d%Creset' -- ${@/#/$GIT_PREFIX}; }; f"
	stat = status -sb
	tags = tag --format='%(creatordate:short)%09%(refname:strip=2)' --sort=-creatordate
	take-ours = "!f() { git checkout --ours $@ && git add $@; }; f"
	take-theirs = "!f() { git checkout --theirs $@ && git add $@; }; f"
	unstage = reset HEAD --
	uncommit = reset --soft HEAD^
	vimdiff = !vim -d -p $(git changes) +\"tabdo Gdiff ${DIFF_BASE:-$(git main)}\"


[protocol "http"]
	allow = never

[protocol "git"]
	allow = never

[init]
	defaultBranch = main

[status]
	aheadBehind = false

[branch]
	autosetuprebase = local

[branch "main"]
	mergeoptions = --ff-only

[branch "master"]
	mergeoptions = --ff-only

[pull]
	ff = only

[push]
	default = current
	autoSetupRemote = true

[rebase]
	autosquash = true

[blame]
	date = short

[checkout]
	workers = 4

[diff]
	algorithm = histogram
	compactionHeuristic = true
	colorMoved = "default"
	colorMovedWS = "allow-indentation-change"
	mnemonicPrefix = true
	renames = copies

[merge]
	tool = fugitive

[grep]
	lineNumber = true

[commit]
	verbose = true

[fetch]
	prune = true

[fetch "fsck"]
	zeroPaddedFilemode = ignore
	badTimezone = ignore

[transfer]
	fsckObjects = true

[stash]
	showPatch = true

[rerere]
	enabled = true

[submodule]
	recurse = true

[color]
	branch = auto
	diff = auto
	interactive = auto
	status = auto
	pager = true
	ui = true

[color "branch"]
	current = bold cyan
	local = cyan
	remote = green
	upstream = bold blue

[color "status"]
	added = yellow
	changed = green
	untracked = cyan

[mergetool]
	keepBackup = false

[mergetool "fugitive"]
	cmd = vim -f -c 'Git mergetool'

[diff "plist"]
	binary = true
	textconv = /usr/libexec/PlistBuddy -x -c print
